import React, { Component } from 'react';
import { AppRegistry, Text, View, StyleSheet, Image, TextInput, ImageBackground, TouchableHighlight, Alert, Dimensions } from 'react-native';
import Constants from 'expo-constants';

let deviceHeight = Dimensions.get('window').height;
let deviceWidth = Dimensions.get('window').width;

export default class App extends Component {
    state = {
        usdValue: 0,
        convertionValue: '$0.00',
        type: 'USD',
        originalBill: 'Original Bill (type here)',
        billWithTip: 'Bill with Tip Added',
        mainPageDisplay: 'block',
        converterPageDisplay: 'none',
        tipPageDisplay: 'none',
    }

    convertion = (currency) => {
        if (currency == 'bitcoin') {
            this.setState({ 
                convertionValue: '₿' + (this.state.usdValue * 0.000052).toFixed(5)
            })
        } else if (currency == 'euro') {
            this.setState({ 
                convertionValue: '€' + (this.state.usdValue * 1.03).toFixed(2)
            })
        } else if (currency == 'peso'){
            this.setState({ 
               convertionValue: '₱' + (this.state.usdValue * 19.97).toFixed(2)
            })
        } else if (currency == 'canadian'){
            this.setState({ 
                convertionValue: '$' + (this.state.usdValue * 1.38).toFixed(2)
            })
        } 
    };
    
    handleMainPagePress = () => this.setState(state => ({
        mainPageDisplay: 'block',
        converterPageDisplay: 'none',
        tipPageDisplay: 'none',
    }));
    handleConverterPagePress = () => this.setState(state => ({
        mainPageDisplay: 'none',
        converterPageDisplay: 'block',
        tipPageDisplay: 'none',
    }));
    handleTipPagePress = () => this.setState(state => ({
        mainPageDisplay: 'none',
        converterPageDisplay: 'none',
        tipPageDisplay: 'block',
    }));

    goalChange = usdValue => {
        this.setState({ usdValue });
    };
    _handleTextChange = originalBill => {
        this.setState({ originalBill });
    };
    addTipTen = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.1).toFixed(2)
        });
    };
    addTipTwo = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.15).toFixed(2)
        });
    };
    addTipTwenty = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.2).toFixed(2)
        });
    };
    addTipFive = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.25).toFixed(2)
        });
    };
    addTipThirty = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.3).toFixed(2)
        });
    };
    addTipThirtyFive = () => {
        this.setState({ 
            billWithTip: (this.state.originalBill * 1.35).toFixed(2)
        });
    };
    

    render() {
        return (
            <View style={styles.container}>
                <View style={{ display: this.state.mainPageDisplay }}>
                    <View style={styles.mainContainer}>
                        <Text style={styles.mainTitle}>
                                Welcome to the Money Calculator!
                        </Text>
                        <TouchableHighlight style={styles.mainButton}
                        onPress={this.handleConverterPagePress}
                        >
                            <Text style={styles.buttonText}>
                                Currency Converter
                            </Text>
                        </TouchableHighlight>
                        
                        <TouchableHighlight style={styles.mainButton}
                        onPress={this.handleTipPagePress}
                        >
                            <Text style={styles.buttonText}>
                                Tip Calculator
                            </Text>
                        </TouchableHighlight>
                    </View>
                </View>
                <View style={{ display: this.state.converterPageDisplay }}>
                    <View style={styles.converterContainer}>
                         <View style={styles.inputContainer}>
                            <Text style={styles.currencyTitle}>
                                Currency Converter
                            </Text>
                            
                                <Text style={styles.subtitle}>
                                    Input USD Value:
                                </Text>
                                
                            
                            <View style={styles.row}>
                                <Text style={styles.dollarSign}>
                                    $
                                </Text>
                                <TextInput
                                    value={this.state.usdValue}
                                    onChangeText={this.goalChange}
                                    style={styles.input}
                                    keyboardType = 'numeric'
                                />
                            </View>
                            <View style={styles.row}>
                                <View style={styles.currencyButton}>
                                    <TouchableHighlight
                                        onPress={() => this.convertion('bitcoin')}
                                    >
                                        <Text style={styles.buttonText}>
                                            Bitcoin
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                <View style={styles.currencyButton}>
                                    <TouchableHighlight
                                        onPress={() => this.convertion('euro')}
                                    >
                                        <Text style={styles.buttonText}>
                                            Euro
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                            </View>
                            <View style={styles.row}>
                                <View style={styles.currencyButton}>
                                    <TouchableHighlight
                                        onPress={() => this.convertion('peso')}
                                    >
                                        <Text style={styles.buttonText}>
                                            Mexican Peso
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                <View style={styles.currencyButton}>
                                    <TouchableHighlight
                                        onPress={() => this.convertion('canadian')}
                                    >
                                        <Text style={styles.buttonText}>
                                            Canadian Dollar
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                            </View>
                        </View>
                        
                        <View style={styles.leftContainer}>
                            <Text style={styles.subtitle}>
                                Converted Value:
                            </Text>
                            <Text style={styles.inputText}>
                                {this.state.convertionValue}
                            </Text>
                            <Text style={styles.inputText}>
                                {this.state.type}
                            </Text>
                            <TouchableHighlight style={styles.backButton}
                            onPress={this.handleMainPagePress}
                            >
                                <Text style={styles.backButtonText}>
                                    Back
                                </Text>
                            </TouchableHighlight>
                        </View>
                    </View>
                </View>
                
                <View style={{ display: this.state.tipPageDisplay }}>
                    <View style={styles.tipContainer}>
                        <Text style={styles.title}>
                            Avery's Tip Calculator
                        </Text>
                        <Text style={styles.title}>
                            $$$
                        </Text>
                        
                        <TextInput
                            value={this.state.originalBill}
                            onChangeText={this._handleTextChange}
                            style={{ width: 200, height: 44, textAlign: 'center', justifyContent: 'center', fontSize: 15, color: 'white',}}
                        />
                    
                        <View style={styles.buttonContainer}>
                            <TouchableHighlight style={styles.button}
                                onPress = {this.addTipTen}
                            >
                                <Text style={styles.tipButtonText}>
                                    10%
                                </Text>
                            </TouchableHighlight>
                            <TouchableHighlight style={styles.button}
                                onPress = {this.addTipTwo}
                            >
                                <Text style={styles.tipButtonText}>
                                    15%
                                </Text>
                            </TouchableHighlight>
                        </View>
                        
                        <View style={styles.buttonContainer}>
                            <TouchableHighlight style={styles.button}
                            onPress = {this.addTipTwenty}
                            >
                                <Text style={styles.tipButtonText}>
                                    20%
                                </Text>
                            </TouchableHighlight>
                            <TouchableHighlight style={styles.button}
                            onPress = {this.addTipFive}
                            >
                                <Text style={styles.tipButtonText}>
                                    25%
                                </Text>
                            </TouchableHighlight>
                        </View>
                        <View style={styles.buttonContainer}>
                            <TouchableHighlight style={styles.button}
                            onPress = {this.addTipThirty}
                            >
                                <Text style={styles.tipButtonText}>
                                    30%
                                </Text>
                            </TouchableHighlight>
                            <TouchableHighlight style={styles.button}
                            onPress = {this.addTipThirtyFive}
                            >
                                <Text style={styles.tipButtonText}>
                                    35%
                                </Text>
                            </TouchableHighlight>
                        </View>
                        
                        <Text style={styles.paragraph}>
                            {this.state.billWithTip}
                        </Text>
                        <TouchableHighlight style={styles.backButton}
                            onPress={this.handleMainPagePress}
                            >
                                <Text style={styles.backButtonText}>
                                    Back
                                </Text>
                        </TouchableHighlight>
                    </View>
                </View>   
            </View>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        width: deviceWidth,
        height: deviceHeight,
        justifyContent: 'center',
        alignItems: 'center',
    },
    backButton: {
        height: 40,
        width: 75,
        backgroundColor: 'white',
        borderColor: 'black',
        borderWidth: 2,
        justifyContent: 'center',
        textAlign: 'center',
        margin: 5,
    },
    backButtonText: {
        color: 'black',
        fontWeight: 'bold',
        fontSize: 15,
    },
    mainContainer: {
        backgroundColor: '#FFF781',
        width: deviceWidth,
        height: deviceHeight,
        justifyContent: 'center',
        alignItems: 'center',
        textAlign: 'center',
    },
    mainTitle: {
        color: 'black',
        fontSize: 30,
        fontWeight: 'bold',
        margin: 10,
    },
    converterContainer: {
        backgroundColor: 'lightBlue',
        width: deviceWidth,
        height: deviceHeight,
        justifyContent: 'center',
        alignItems: 'center',
    },
    inputContainer: {
        width: deviceWidth,
        height: 4*(deviceHeight)/6,
        borderBottomWidth: 2,
        borderColor: 'white',
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    leftContainer: {
        height: 2*(deviceHeight)/6,
        width: deviceWidth,
        justifyContent: 'space-around',
        alignItems: 'center',
    },
    currencyTitle: {
        color: 'black',
        fontSize: 30,
        fontWeight: 'bold',
    },
    subtitle: {
        color: 'black',
        fontSize: 20,
        fontWeight: 'bold',
    },
    input: {
        borderWidth: 2,
        borderColor: 'black',
        height: 50,
        width: 180,
        color: 'black',
        fontSize: 25,
        fontWeight: 'bold',
        textAlign: 'center',
    },
    row: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-around',
    },
    inputText: {
        color: 'black',
        fontSize: 25,
        marginBottom: 2,
    },
    currencyButton: {
        height: 50,
        width: 100,
        backgroundColor: 'white',
        borderColor: 'yellow',
        borderWidth: 2,
        justifyContent: 'center',
        textAlign: 'center',
        margin: 10,
    },
    buttonText: {
        color: 'black',
        fontWeight: 'bold',
        fontSize: 17,
    },
    dollarSign: {
        color: 'black',
        fontSize: 30,
        fontWeight: 'bold',

    },
    tipContainer: {
        height: deviceHeight,
        width: deviceWidth,
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: 'green',
    },
    scoreContainer: {
        flexDirection: 'row',
        marginTop: 5,
        justifyContent: 'center',
        alignItems: 'center',
    },
    textInput: {
        height: 40,
        width: 175,
        borderWidth: 1,
        color: 'white',
        fontSize: 18,
        marginRight: 30,
    },
    title: {
        color: 'white',
        fontSize: 30,
        textAlign: 'center',
        fontWeight: 'bold',
        marginBottom: 10,
    },
    paragraph: {
        color: 'white',
        fontSize: 15,
        textAlign: 'center',
        marginTop: 10,
    },
    buttonContainer: {
        flexDirection: 'row',
    },
    button: {
        height: 60,
        width: 125,
        backgroundColor: 'green',
        borderColor: 'white',
        borderWidth: 2,
        alignItems: 'center',
        justifyContent: 'center',
        margin: 10,
    },
    tipButtonText: {
        color: 'white',
        fontSize: 20,
        textAlign: 'center',
    },
    mainButton: {
        height: 75,
        width: 150,
        backgroundColor: 'white',
        borderColor: '#FF8400',
        borderWidth: 2,
        justifyContent: 'center',
        textAlign: 'center',
        margin: 10,
    },
});